@inject ITextConsumer TextConsumer

<div class="form-group">
    <div class="form-inline">
        <label>@Label</label>
        <div>
            <BlazorInputFile.InputFile accept=".txt" OnChange="TextFileSelected" />
        </div>
    </div>

    <div class="form-group">
        <div class="form-inline">
            <div style="margin-right: 10px">
                <button class="btn btn-primary" @onclick="CalculateNumberOfWordsFromFile">Calculate</button>
            </div>
            <div style="margin-right: 10px">
                <WordResult Result="result"/>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div readonly=""
             style="border: 1px solid gray; width: 100%; height: 700px; overflow: scroll; ">
            @foreach (var text in UploadedTextRecords)
            {
                @text
                <br />
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string Label { get; set; } = "Please upload textual file";

    private List<string> UploadedTextRecords { get; set; } = new List<string>();
    private string Text { get; set; }
    private int result = 0;

    private async Task TextFileSelected(IFileListEntry[] files)
    {
        UploadedTextRecords.Clear();
        Text = "";
        IFileListEntry  file = files.FirstOrDefault();

        if (file != null)
        {
            if (file.Type == "text/plain")
            {
                using var reader = new System.IO.StreamReader(file.Data);
                string text = "";
                while ((text = await reader.ReadLineAsync()) != null)
                {
                    UploadedTextRecords.Add(text);
                    Text += $"{text} ";
                    text = "";
                }

                result = 0;
                StateHasChanged();
            }
        }

        // handle here case for invalid file
    }

    private async Task CalculateNumberOfWordsFromFile()
    {
        result = 0;
        // Calculate number of text's words from file
        if (!string.IsNullOrEmpty(Text))
        {
            result = await TextConsumer.CalculateNumberOfWords(new Text {Content = Text});
        }
    }
}
